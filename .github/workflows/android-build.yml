name: Nightly Build - Android

on:
  schedule:
    - cron: "*/5 * * * *"
  repository_dispatch:
   types: androidnightly
  
jobs:  
  build:
    name: "Nightly Build - Android"
    env:
        ANDROID_HOME: "/Users/runner/Library/Android/sdk"
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v1

    - name: Install VirtualBox
      run: brew cask install virtualbox      
          
    - name: Create Docker VM
      shell: bash
      run: |
        mkdir -p /Users/runner/.docker/machine/cache
        curl -Lo ~/.docker/machine/cache/boot2docker.iso https://github.com/boot2docker/boot2docker/releases/download/v19.03.5/boot2docker.iso
        base=https://github.com/docker/machine/releases/download/v0.16.0 &&
        curl -L $base/docker-machine-$(uname -s)-$(uname -m) >/usr/local/bin/docker-machine &&
        chmod +x /usr/local/bin/docker-machine
        docker-machine create --driver virtualbox default
        DOCKER_IP="$( docker-machine ip default )";
        echo ::set-env name=localhostaddress::${DOCKER_IP}
        mkdir -p /Users/runner/temp
        curl -Lo ~/temp/docker-19.03.8.tgz  https://download.docker.com/mac/static/stable/x86_64/docker-19.03.8.tgz
        tar xzvf /Users/runner/temp/docker-19.03.8.tgz
        sudo cp docker/docker /usr/local/bin/    
        docker-machine restart
        eval $(docker-machine env default) 
        docker info
        docker network ls    
        # Export variable (this target)
        DOCKER_TLS_VERIFY="$(   docker-machine env default | grep DOCKER_TLS_VERIFY   | sed -e 's/.*="//g' -e 's/"$//g' )"
        DOCKER_HOST="$(         docker-machine env default | grep DOCKER_HOST         | sed -e 's/.*="//g' -e 's/"$//g' )"
        DOCKER_CERT_PATH="$(    docker-machine env default | grep DOCKER_CERT_PATH    | sed -e 's/.*="//g' -e 's/"$//g' )"
        DOCKER_MACHINE_NAME="$( docker-machine env default | grep DOCKER_MACHINE_NAME | sed -e 's/.*="//g' -e 's/"$//g' )"
        DOCKER_IP="$( docker-machine ip default )";
        # Export variable (this other targets)
        # https://help.github.com/en/actions/automating-your-workflow-with-github-actions/development-tools-for-github-actions#set-an-environment-variable-set-env
        echo ::set-env name=DOCKER_TLS_VERIFY::${DOCKER_TLS_VERIFY}
        echo ::set-env name=DOCKER_HOST::${DOCKER_HOST}
        echo ::set-env name=DOCKER_CERT_PATH::${DOCKER_CERT_PATH}
        echo ::set-env name=DOCKER_MACHINE_NAME::${DOCKER_MACHINE_NAME}
        echo ::set-env name=localhostaddress::${DOCKER_IP}        
   
    - uses: malinskiy/action-android/install-sdk@release/0.0.6
    - run: adb devices
    - run: echo $ANDROID_HOME
    - run: |
          cd $ANDROID_HOME/tools/bin
          ./sdkmanager "build-tools;29.0.2"
    
    - name: Setup Nuget
      uses: olegtarasov/download-nuget@v1
          
    - name: Restore Nuget Packages
      run: mono $NUGET_EXE restore MixologyJournal.sln -source "https://api.nuget.org/v3/index.json"
    
    - name: Import GPG key
      id: import_gpg
      uses: crazy-max/ghaction-import-gpg@v2
      env:
        GPG_PRIVATE_KEY: ${{ secrets.APPSETTINGS_GPG_PRIVATE_KEY }}
        PASSPHRASE: ${{ secrets.APPSETTINGS_PASSPHRASE }}
      
    - name: Decrypt Settings
      uses: minddocdev/decrypt-action@master
      with:
        files: .github/workflows/appsettings.dev.json.gpg,.github/workflows/appsettings.prod.json.gpg
        passphrase: ${{ secrets.SECRETS_PASSPHRASE }}
  
    - name: Move Decrypted Files Settings
      run: |
        mv .github/workflows/appsettings.dev.json MixologyJournalApp/MixologyJournalApp/appsettings.dev.json
        mv .github/workflows/appsettings.prod.json MixologyJournalApp/MixologyJournalApp/appsettings.prod.json
        
    - name: Build Code
      run: msbuild /p:Configuration="Release" /p:Platform="Any CPU" /t:Build MixologyJournal.sln

    - name: Build APK
      run: msbuild MixologyJournalApp/MixologyJournalApp.Android/MixologyJournalApp.Android.csproj -target:SignAndroidPackage /p:Configuration=Release
