<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddBaseRecipe.Text" xml:space="preserve">
    <value>Base Recipe</value>
  </data>
  <data name="AddContextMenu.Label" xml:space="preserve">
    <value>Add...</value>
  </data>
  <data name="AddIngredientMenu.Label" xml:space="preserve">
    <value>Add Ingredient</value>
  </data>
  <data name="AddModifiedRecipe.Text" xml:space="preserve">
    <value>Homemade Drink</value>
  </data>
  <data name="AddPictureMenu.Label" xml:space="preserve">
    <value>Add Picture</value>
  </data>
  <data name="AddTextEntry.Text" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="BackMenu.Label" xml:space="preserve">
    <value>Go Back</value>
  </data>
  <data name="CancelMenu.Label" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CancelOption" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CentiliterUnit" xml:space="preserve">
    <value>Centiliter</value>
  </data>
  <data name="ClearCache.Content" xml:space="preserve">
    <value>Clear Cache</value>
  </data>
  <data name="ClearCacheWarning.Text" xml:space="preserve">
    <value>Clearing the cache will remove all locally sourced files which are saved from cloud-based services. Using this button will force this app to download all data once again, but may help in situations where changes to files are not being shown</value>
  </data>
  <data name="ConflictDialogDescriptionFormatted" xml:space="preserve">
    <value>There seems to already be recipes in {0}. Would you like to keep the recipes you were using, or use the recipes in {0}?</value>
  </data>
  <data name="ConflictDialogHeader" xml:space="preserve">
    <value>Conflict</value>
  </data>
  <data name="ContinueDialogOption" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="CouldNotConnectDescription" xml:space="preserve">
    <value>We were not able to connect to the files. You may continue and we will use whatever has been cached locally, or you may retry.</value>
  </data>
  <data name="CouldNotConnectDialogDescription" xml:space="preserve">
    <value>We were not able to connect to this service. Please try again later.</value>
  </data>
  <data name="CupUnit" xml:space="preserve">
    <value>Cup</value>
  </data>
  <data name="DashUnit" xml:space="preserve">
    <value>Dash</value>
  </data>
  <data name="DeleteBaseRecipeDialogDescription" xml:space="preserve">
    <value>This will delete the recipe and any derived recipes. Are you sure you want to do this?</value>
  </data>
  <data name="DeleteDialogHeader" xml:space="preserve">
    <value>Delete?</value>
  </data>
  <data name="DeleteEntryMenu.Label" xml:space="preserve">
    <value>Delete Entry</value>
  </data>
  <data name="DeleteJournalEntryDialogDescription" xml:space="preserve">
    <value>This will delete the journal entry, as well as any images connected to it. Are you sure you want to do this?</value>
  </data>
  <data name="DeleteRecipeMenu.Label" xml:space="preserve">
    <value>Delete Recipe</value>
  </data>
  <data name="DropUnit" xml:space="preserve">
    <value>Drop</value>
  </data>
  <data name="EmptyListText.Text" xml:space="preserve">
    <value>Nothing here yet!</value>
  </data>
  <data name="EntryNotes.Header" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="EntryTitle.Header" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="ErrorDialogHeader" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="FavoriteHeader.Header" xml:space="preserve">
    <value>Favorite</value>
  </data>
  <data name="FavoriteMenu.Label" xml:space="preserve">
    <value>Favorite This Recipe</value>
  </data>
  <data name="IngredientDetails.Header" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="IngredientName.Header" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="IngredientQuantity.Header" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="IngredientUnit.Header" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="JournalHeader.Header" xml:space="preserve">
    <value>Journal</value>
  </data>
  <data name="KeepOption" xml:space="preserve">
    <value>Keep</value>
  </data>
  <data name="LiterUnit" xml:space="preserve">
    <value>Liter</value>
  </data>
  <data name="LocalSourceName" xml:space="preserve">
    <value>Local</value>
  </data>
  <data name="MilliliterUnit" xml:space="preserve">
    <value>Milliliter</value>
  </data>
  <data name="NewEntryHeader.Header" xml:space="preserve">
    <value>New Entry</value>
  </data>
  <data name="NextMenu.Label" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="NoFavoriteRecipe.Text" xml:space="preserve">
    <value>No Favorite Recipe Chosen Yet!</value>
  </data>
  <data name="NoOption" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NumberOfDrinksCombo.Header" xml:space="preserve">
    <value>Drinks To Make:</value>
  </data>
  <data name="NumberOfDrinksMenu.Label" xml:space="preserve">
    <value>Set Number Of Drinks</value>
  </data>
  <data name="OKOption" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="OneDriveSourceName" xml:space="preserve">
    <value>OneDrive</value>
  </data>
  <data name="OriginalHeader.Header" xml:space="preserve">
    <value>Original</value>
  </data>
  <data name="OthersHeader.Header" xml:space="preserve">
    <value>Others</value>
  </data>
  <data name="OunceUnit" xml:space="preserve">
    <value>Ounce</value>
  </data>
  <data name="OverviewTitle.Title" xml:space="preserve">
    <value>Mixology</value>
  </data>
  <data name="PickAnotherFileOption" xml:space="preserve">
    <value>Pick Another File</value>
  </data>
  <data name="PieceUnit" xml:space="preserve">
    <value>Piece</value>
  </data>
  <data name="PinchUnit" xml:space="preserve">
    <value>Pinch</value>
  </data>
  <data name="PintUnit" xml:space="preserve">
    <value>Pint</value>
  </data>
  <data name="RecipeInstructions.Header" xml:space="preserve">
    <value>Instructions</value>
  </data>
  <data name="RecipeInstructions.PlaceholderText" xml:space="preserve">
    <value>Insert Instructions Here</value>
  </data>
  <data name="RecipesHeader.Header" xml:space="preserve">
    <value>Recipes</value>
  </data>
  <data name="RecipeTitle.Header" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="RetryDialogOption" xml:space="preserve">
    <value>Retry</value>
  </data>
  <data name="ReviewNotesBox.PlaceholderText" xml:space="preserve">
    <value>Insert Notes About The Results Here</value>
  </data>
  <data name="SaveMenu.Label" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SettingsHeader.Header" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SettingsMenu.Label" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="ShouldSync.Header" xml:space="preserve">
    <value>Sync Recipes?</value>
  </data>
  <data name="SliceUnit" xml:space="preserve">
    <value>Slice</value>
  </data>
  <data name="SpoonUnit" xml:space="preserve">
    <value>Spoon</value>
  </data>
  <data name="SyncSource.Header" xml:space="preserve">
    <value>Source To Sync From</value>
  </data>
  <data name="TablespoonUnit" xml:space="preserve">
    <value>Tablespoon</value>
  </data>
  <data name="TakePictureMenu.Label" xml:space="preserve">
    <value>Take Picture</value>
  </data>
  <data name="TeaspoonUnit" xml:space="preserve">
    <value>Teaspoon</value>
  </data>
  <data name="TooLargeDialogDescription" xml:space="preserve">
    <value>This photo is too large to sync remotely. Do you want to pick another file?</value>
  </data>
  <data name="TooLargeDialogHeader" xml:space="preserve">
    <value>Too Large</value>
  </data>
  <data name="TwistUnit" xml:space="preserve">
    <value>Twist</value>
  </data>
  <data name="UseOptionFormatted" xml:space="preserve">
    <value>Use {0}</value>
  </data>
  <data name="YesOption" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="CentiliterUnitPlural" xml:space="preserve">
    <value>Centiliters</value>
  </data>
  <data name="CupUnitPlural" xml:space="preserve">
    <value>Cups</value>
  </data>
  <data name="DashUnitPlural" xml:space="preserve">
    <value>Dashes</value>
  </data>
  <data name="DropUnitPlural" xml:space="preserve">
    <value>Drops</value>
  </data>
  <data name="LiterUnitPlural" xml:space="preserve">
    <value>Liters</value>
  </data>
  <data name="MilliliterUnitPlural" xml:space="preserve">
    <value>Milliliters</value>
  </data>
  <data name="OunceUnitPlural" xml:space="preserve">
    <value>Ounces</value>
  </data>
  <data name="PieceUnitPlural" xml:space="preserve">
    <value>Pieces</value>
  </data>
  <data name="PinchUnitPlural" xml:space="preserve">
    <value>Pinches</value>
  </data>
  <data name="PintUnitPlural" xml:space="preserve">
    <value>Pints</value>
  </data>
  <data name="SliceUnitPlural" xml:space="preserve">
    <value>Slices</value>
  </data>
  <data name="SpoonUnitPlural" xml:space="preserve">
    <value>Spoons</value>
  </data>
  <data name="TablespoonUnitPlural" xml:space="preserve">
    <value>Tablespoons</value>
  </data>
  <data name="TeaspoonUnitPlural" xml:space="preserve">
    <value>Teaspoons</value>
  </data>
  <data name="TwistUnitPlural" xml:space="preserve">
    <value>Twists</value>
  </data>
  <data name="AddBarDrink.Text" xml:space="preserve">
    <value>Bar Drink</value>
  </data>
  <data name="NewBarDrink.Header" xml:space="preserve">
    <value>New Bar Drink</value>
  </data>
  <data name="NewRecipe.Header" xml:space="preserve">
    <value>New Recipe</value>
  </data>
  <data name="LocationBox.Header" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="CreateDrinkMenu.Label" xml:space="preserve">
    <value>Make Drink</value>
  </data>
  <data name="DrinksHeader.Header" xml:space="preserve">
    <value>Drinks</value>
  </data>
  <data name="CentiliterUnitFormat" xml:space="preserve">
    <value>{0} {1} of {2}</value>
  </data>
  <data name="CupUnitFormat" xml:space="preserve">
    <value>{0} {1} of {2}</value>
  </data>
  <data name="DashUnitFormat" xml:space="preserve">
    <value>{0} {1} of {2}</value>
  </data>
  <data name="DropUnitFormat" xml:space="preserve">
    <value>{0} {1} of {2}</value>
  </data>
  <data name="LiterUnitFormat" xml:space="preserve">
    <value>{0} {1} of {2}</value>
  </data>
  <data name="MilliliterUnitFormat" xml:space="preserve">
    <value>{0} {1} of {2}</value>
  </data>
  <data name="OunceUnitFormat" xml:space="preserve">
    <value>{0} {1} of {2}</value>
  </data>
  <data name="PieceUnitFormat" xml:space="preserve">
    <value>{0} {1} of {2}</value>
  </data>
  <data name="PinchUnitFormat" xml:space="preserve">
    <value>{0} {1} of {2}</value>
  </data>
  <data name="PintUnitFormat" xml:space="preserve">
    <value>{0} {1} of {2}</value>
  </data>
  <data name="SliceUnitFormat" xml:space="preserve">
    <value>{0} {1} of {2}</value>
  </data>
  <data name="SpoonUnitFormat" xml:space="preserve">
    <value>{0} {1} of {2}</value>
  </data>
  <data name="TablespoonUnitFormat" xml:space="preserve">
    <value>{0} {1} of {2}</value>
  </data>
  <data name="TeaspoonUnitFormat" xml:space="preserve">
    <value>{0} {1} of {2}</value>
  </data>
  <data name="ToTasteUnit" xml:space="preserve">
    <value>To Taste</value>
  </data>
  <data name="ToTasteUnitFormat" xml:space="preserve">
    <value>{2} {1}</value>
  </data>
  <data name="ToTasteUnitPlural" xml:space="preserve">
    <value>To Taste</value>
  </data>
  <data name="TwistUnitFormat" xml:space="preserve">
    <value>{0} {2} {1}</value>
  </data>
  <data name="UnknownUnit" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="UnknownUnitFormat" xml:space="preserve">
    <value>{2}</value>
  </data>
  <data name="UnknownUnitPlural" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="AddBarDrinkLabel" xml:space="preserve">
    <value>Add Bar Drink</value>
  </data>
  <data name="AddHomemadeDrinkLabel" xml:space="preserve">
    <value>Add Homemade Drink</value>
  </data>
  <data name="AddNoteLabel" xml:space="preserve">
    <value>Add Note</value>
  </data>
  <data name="AddRecipeLabel" xml:space="preserve">
    <value>Add Recipe</value>
  </data>
  <data name="SettingsLabel" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="DrinksLabel" xml:space="preserve">
    <value>Drinks</value>
  </data>
  <data name="NotesLabel" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="RecipesLabel" xml:space="preserve">
    <value>Recipes</value>
  </data>
</root>